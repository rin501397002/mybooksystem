<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.BorrowrecordMapper" >
  <resultMap id="BaseResultMap" type="com.gx.po.Borrowrecord" >
    <id column="borrowID" property="borrowid" jdbcType="INTEGER" />
    <result column="userID" property="userid" jdbcType="INTEGER" />
    <result column="bookID" property="bookid" jdbcType="INTEGER" />
    <result column="borrowdate" property="borrowdate" jdbcType="DATE" />
    <result column="returndate" property="returndate" jdbcType="DATE" />
    <result column="ifreturn" property="ifreturn" jdbcType="INTEGER" />
    <result column="renewtime" property="renewtime" jdbcType="INTEGER" />
    <result column="ifovertime" property="ifovertime" jdbcType="INTEGER" />
    <result column="borrowstate" property="borrowstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    borrowID, userID, bookID, borrowdate, returndate, ifreturn, renewtime, ifovertime, 
    borrowstate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrowrecord
    where borrowID = #{borrowid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrowrecord
    where borrowID = #{borrowid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gx.po.Borrowrecord" >
    insert into borrowrecord (borrowID, userID, bookID, 
      borrowdate, returndate, ifreturn, 
      renewtime, ifovertime, borrowstate
      )
    values (#{borrowid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, 
      #{borrowdate,jdbcType=DATE}, #{returndate,jdbcType=DATE}, #{ifreturn,jdbcType=INTEGER}, 
      #{renewtime,jdbcType=INTEGER}, #{ifovertime,jdbcType=INTEGER}, #{borrowstate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gx.po.Borrowrecord" >
    insert into borrowrecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="borrowid != null" >
        borrowID,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="bookid != null" >
        bookID,
      </if>
      <if test="borrowdate != null" >
        borrowdate,
      </if>
      <if test="returndate != null" >
        returndate,
      </if>
      <if test="ifreturn != null" >
        ifreturn,
      </if>
      <if test="renewtime != null" >
        renewtime,
      </if>
      <if test="ifovertime != null" >
        ifovertime,
      </if>
      <if test="borrowstate != null" >
        borrowstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="borrowid != null" >
        #{borrowid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="borrowdate != null" >
        #{borrowdate,jdbcType=DATE},
      </if>
      <if test="returndate != null" >
        #{returndate,jdbcType=DATE},
      </if>
      <if test="ifreturn != null" >
        #{ifreturn,jdbcType=INTEGER},
      </if>
      <if test="renewtime != null" >
        #{renewtime,jdbcType=INTEGER},
      </if>
      <if test="ifovertime != null" >
        #{ifovertime,jdbcType=INTEGER},
      </if>
      <if test="borrowstate != null" >
        #{borrowstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gx.po.Borrowrecord" >
    update borrowrecord
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        bookID = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="borrowdate != null" >
        borrowdate = #{borrowdate,jdbcType=DATE},
      </if>
      <if test="returndate != null" >
        returndate = #{returndate,jdbcType=DATE},
      </if>
      <if test="ifreturn != null" >
        ifreturn = #{ifreturn,jdbcType=INTEGER},
      </if>
      <if test="renewtime != null" >
        renewtime = #{renewtime,jdbcType=INTEGER},
      </if>
      <if test="ifovertime != null" >
        ifovertime = #{ifovertime,jdbcType=INTEGER},
      </if>
      <if test="borrowstate != null" >
        borrowstate = #{borrowstate,jdbcType=INTEGER},
      </if>
    </set>
    where borrowID = #{borrowid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gx.po.Borrowrecord" >
    update borrowrecord
    set userID = #{userid,jdbcType=INTEGER},
      bookID = #{bookid,jdbcType=INTEGER},
      borrowdate = #{borrowdate,jdbcType=DATE},
      returndate = #{returndate,jdbcType=DATE},
      ifreturn = #{ifreturn,jdbcType=INTEGER},
      renewtime = #{renewtime,jdbcType=INTEGER},
      ifovertime = #{ifovertime,jdbcType=INTEGER},
      borrowstate = #{borrowstate,jdbcType=INTEGER}
    where borrowID = #{borrowid,jdbcType=INTEGER}
  </update>
  <select id="findBooknum" resultType="com.gx.po.Book">
  	SELECT bookamount FROM book 
  	WHERE book.bookID=#{id,jdbcType=INTEGER}
  </select>
  <select id="findUserborrownum" resultType="com.gx.vo.DtoVo">
  	SELECT user.userID as id, number as ownnum FROM  user 
  	WHERE user.userID=#{id,jdbcType=INTEGER}
  </select>
  <select id="findUserOwnnum" resultType="com.gx.vo.DtoVo">
  	SELECT recod.userID  as id, COUNT(recod.userID) AS ownnum FROM borrowrecord recod 
  	WHERE  recod.borrowstate=0 AND recod.userID=#{id,jdbcType=INTEGER}
  </select>
  <select id="findBooklose" resultType="com.gx.vo.DtoVo">
  	SELECT lose.bookID as id,COUNT(lose.bookID) as ownnum FROM loserecord lose 
  	WHERE  lose.bookID=#{id,jdbcType=INTEGER}
  </select>
  <select id="findBookBorrow" resultType="com.gx.vo.DtoVo">
  	SELECT b.bookID as id,COUNT(b.bookID) AS ownnum FROM borrowrecord b 
  	WHERE  b.borrowstate !=1 AND  b.bookID=#{id,jdbcType=INTEGER}
  </select>
</mapper>