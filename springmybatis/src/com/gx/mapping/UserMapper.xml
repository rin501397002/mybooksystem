<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.gx.po.User" >
    <constructor >
      <idArg column="userID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="borrownumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="mailbox" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="telephone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ifborrow" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    userID, username, sex, password, borrownumber, mailbox, telephone, ifborrow, number, 
    role
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userID = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userID = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gx.po.User" >
    insert into user (userID, username, sex, 
      password, borrownumber, mailbox, 
      telephone, ifborrow, number, 
      role)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{borrownumber,jdbcType=VARCHAR}, #{mailbox,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{ifborrow,jdbcType=BIT}, #{number,jdbcType=INTEGER}, 
      #{role,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gx.po.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userID,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="borrownumber != null" >
        borrownumber,
      </if>
      <if test="mailbox != null" >
        mailbox,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="ifborrow != null" >
        ifborrow,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="borrownumber != null" >
        #{borrownumber,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="ifborrow != null" >
        #{ifborrow,jdbcType=BIT},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gx.po.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="borrownumber != null" >
        borrownumber = #{borrownumber,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="ifborrow != null" >
        ifborrow = #{ifborrow,jdbcType=BIT},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gx.po.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      borrownumber = #{borrownumber,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      ifborrow = #{ifborrow,jdbcType=BIT},
      number = #{number,jdbcType=INTEGER},
      role = #{role,jdbcType=INTEGER}
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  
  <select id="findAllVo" resultType="com.gx.vo.UserVo">
  	SELECT u.*,r.rolename FROM USER u INNER JOIN role r ON r.roleID=u.role
  </select>
  
  <select id="findUserVoById" resultType="com.gx.vo.UserVo">
  	SELECT u.*,r.rolename FROM USER u INNER JOIN role r ON r.roleID=u.role
	WHERE  u.userID=#{id,jdbcType=INTEGER} AND r.rolename LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
  </select>
  
  <select id="findUserVo" resultType="com.gx.vo.UserVo">
  	SELECT u.*,r.rolename FROM USER u INNER JOIN role r ON r.roleID=u.role
  	WHERE  u.userID=#{vo.id,jdbcType=INTEGER} AND r.rolename=#{vo.username,jdbcType=VARCHAR}
  </select>
  
  <select id="login" resultType="com.gx.po.User">
  	SELECT	*  FROM USER
	WHERE USER.username=#{username,jdbcType=VARCHAR} AND USER.password=#{password,jdbcType=VARCHAR}
  </select>
  
  <select id="findQueryAll" resultType="com.gx.vo.UserVo">
  	SELECT user.*,role.rolename  FROM USER INNER JOIN role ON role.roleID=user.role
  	ORDER BY user.userID DESC
  </select>
  
  <select id="findQueryByName" resultType="com.gx.vo.UserVo">
  	SELECT user.*,role.rolename  FROM USER INNER JOIN role ON role.roleID=user.role
  	WHERE  user.username LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%') OR user.borrownumber LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')  
  	ORDER BY user.userID DESC
  </select>
</mapper>